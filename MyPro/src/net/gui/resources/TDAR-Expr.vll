<?xml version="1.0"?>

<!-- *****************  Do not edit  ***************** -->
<!-- Generated by VisualLangLab (http://vll.java.net/) -->
<!-- *****************  Do not edit  ***************** -->
<VLL-Grammar>
  <Tokens>
    <Literal Name="&quot;(&quot;" Pattern="(" />
    <Literal Name="&quot;)&quot;" Pattern=")" />
    <Literal Name="&quot;*&quot;" Pattern="*" />
    <Literal Name="&quot;+&quot;" Pattern="+" />
    <Literal Name="&quot;-&quot;" Pattern="-" />
    <Literal Name="&quot;=&quot;" Pattern="=" />
    <Regex Name="ID" Pattern="[a-zA-Z]+" />
    <Regex Name="INT" Pattern="\\d+" />
    <Regex Name="NEWLINE" Pattern="\\r?\\n" />
  </Tokens>
  <Whitespace>[ \\t]+</Whitespace>
  <Comments></Comments>
  <Parsers>
    <Parser Name="Prog" >
      <Reference Ref="stat" Mult="+" />
    </Parser>
    <Parser Name="atom" >
      <Choice >
        <Token Ref="INT" />
        <Token Ref="ID" />
        <Sequence >
          <Token Ref="&quot;(&quot;" />
          <Reference Ref="expr" />
          <Token Ref="&quot;)&quot;" />
        </Sequence>
      </Choice>
    </Parser>
    <Parser Name="expr" >
      <Sequence >
        <Reference Ref="multExpr" />
        <Sequence Mult="*" >
          <Choice >
            <Token Ref="&quot;+&quot;" />
            <Token Ref="&quot;-&quot;" />
          </Choice>
          <Reference Ref="multExpr" />
        </Sequence>
      </Sequence>
    </Parser>
    <Parser Name="multExpr" >
      <Sequence >
        <Reference Ref="atom" />
        <Sequence Mult="*" >
          <Token Ref="&quot;*&quot;" />
          <Reference Ref="atom" />
        </Sequence>
      </Sequence>
    </Parser>
    <Parser Name="stat" >
      <Choice >
        <Sequence >
          <Token Ref="ID" />
          <Token Ref="&quot;=&quot;" />
          <Reference Ref="expr" />
          <Token Ref="NEWLINE" />
        </Sequence>
        <Sequence >
          <Reference Ref="expr" />
          <Token Ref="NEWLINE" />
        </Sequence>
        <Token Ref="NEWLINE" />
      </Choice>
    </Parser>
  </Parsers>
</VLL-Grammar>
